"""
Django settings for injury_predict_web project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

LOG_FREQ = 50
REPORT_ID = "https://app.powerbi.com/groups/me/reports/11a0acc4-ff45-43e4-8371-fd856e97cf92"  # os.environ['REPORT_ID']

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
OUTPUT_PATH = os.path.join(BASE_DIR, '..', 'output/')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "%%i1jjthn9!!w!s92alc-ey+uvzut9swqy3cau#+g9j2fvdr8="

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False  #setting for production environment

# inmemory file buffer temporary path
FILE_UPLOAD_HANDLERS = ['django.core.files.uploadhandler.TemporaryFileUploadHandler',]

PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__) + "/../")

# Logging related settings
LOG_FILE = "log/locallog"
LOG_LEVEL = "DEBUG"
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "root": {"level": LOG_LEVEL, "handlers": ["file"]},
    "handlers": {
        "file": {
            "level": LOG_LEVEL,
            "class": "logging.FileHandler",
            "filename": LOG_FILE,
            "formatter": "app",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": LOG_LEVEL,
            "propagate": True,
        },
    },
    "formatters": {
        "app": {
            "format": (
                u"%(asctime)s [%(levelname)-8s] "
                "(%(module)s.%(funcName)s) %(message)s"
            ),
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
}
ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "preprocess_module.apps.PreprocessModuleConfig",
    "prediction_module.apps.PredictionModuleConfig",
    "cryptographic_fields",
    "background_task",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "injury_predict_web.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

REST_FRAMEWORK = {
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
    ]
}

WSGI_APPLICATION = "injury_predict_web.wsgi.application"


# When it uses 'MS SQL Server (with django 'mssql-django')
# NAME, USER,  PASSWORD, HOST are needed to modify according to the environment to deploy.
# e.g.,   'PASSWORD': 'Password1',
#         'HOST': 'RINOSHIYOCOM\SQLEXPRESS',
DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'injury_predict_db',
        'USER': 'injury_predict_user',
        'PASSWORD': '(password)',
        'HOST': '(SQL server address)\(SQL server name)',
        'PORT': '',

        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
        },
    },
}

'''
# When it uses 'SQLite3'
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
"""
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}
# When it uses 'MySQL'
DATABASES = {
    'default': {
        'ENGINE': 'sql_server.pyodbc',
        'NAME': 'Capstone',
        'USER': 'capstone_user',
        'PASSWORD': 'password',

        'OPTIONS': {
            'driver': 'SQL Server Native Client 11.0',
        },
    }
}
'''

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/New_York"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # setting for production environment
MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_for_deploy')  # setting for production environment
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# Globally defined variables
GROUPED_NAICS = {
    "31": "31-33",
    "32": "31-33",
    "33": "31-33",
    "44": "44-45",
    "45": "44-45",
    "48": "48-49",
    "49": "48-49",
}
CLAIM_COLS = [
    "NAICS",
    "CLAIM_NUMBER",
    "EMPLR_PHY_POSTAL_CD",
    "EMPL_MLNG_POSTAL_CD",
    "DT_OF_INJURY",
    "INJURY_CAUSE_CD",
    "INJURY_NATURE_CD",
]
EMPLOYMENT_COLS = [
    "periodyear",
    "period",
    "areaname",
    "indcode",
    "mnth1emp",
    "mnth2emp",
    "mnth3emp",
]
MEDICAL_COST_COLS = [
    "Claim Numeric",
    "WCAIS Claim Number",
    "PartOfBody", 
    "NatureOfInjury", 
    "CauseOfInjury",
    "Accident Date",
    "Amount Charged",
    "Amount Paid",
    "Confidence",
]
PREDICTION_STEP = 12
